"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[921],{61300:e=>{e.exports=JSON.parse('{"functions":[{"name":"GetRankStore","desc":"Creates or retrieves a Rank Store with the provided name.","params":[{"name":"name","desc":"Name of the RankStore","lua_type":"string"},{"name":"numBuckets","desc":"The number of buckets to use","lua_type":"number"},{"name":"maxBucketSize","desc":"Maximum number of entries in each bucket","lua_type":"number"}],"returns":[{"desc":"","lua_type":"RankStore"}],"function_type":"static","yields":true,"source":{"line":48,"path":"src/RankStore/init.lua"}},{"name":"SetScoreAsync","desc":"Sets the score for the given id.","params":[{"name":"id","desc":"The id of the entry. A number to uniquely identify the entry, typically a userId.","lua_type":"number"},{"name":"score","desc":"The score to set","lua_type":"number"}],"returns":[{"desc":"","lua_type":"setResult\\n"}],"function_type":"method","yields":true,"source":{"line":66,"path":"src/RankStore/init.lua"}},{"name":"GetEntryAsync","desc":"Gets the entry for the given id.","params":[{"name":"id","desc":"The id of the entry.","lua_type":"number"}],"returns":[{"desc":"","lua_type":"entry\\n"}],"function_type":"method","yields":true,"source":{"line":79,"path":"src/RankStore/init.lua"}},{"name":"GetTopScoresAsync","desc":"Gets the top n scores.","params":[{"name":"n","desc":"The number of scores to get","lua_type":"number"}],"returns":[{"desc":"","lua_type":"{entry}"}],"function_type":"method","yields":true,"source":{"line":110,"path":"src/RankStore/init.lua"}},{"name":"ClearAsync","desc":"Clears all entries in the RankStore.\\n\\nThis actually just increments the keys used in the underlying DataStore so no data is actually deleted. However there is \\nno support to rollback after calling this function at present.","params":[],"returns":[],"function_type":"method","yields":true,"source":{"line":125,"path":"src/RankStore/init.lua"}}],"properties":[],"types":[{"name":"entry","desc":"An array of strings, a number, or nil.","lua_type":"{id: string, rank: number, score: number}","source":{"line":24,"path":"src/RankStore/init.lua"}},{"name":"setResult","desc":"An array of strings, a number, or nil.","lua_type":"{prevRank: number, prevScore: number, newRank: number, newScore: number}","source":{"line":33,"path":"src/RankStore/init.lua"}}],"name":"RankStore","desc":"","source":{"line":8,"path":"src/RankStore/init.lua"}}')}}]);